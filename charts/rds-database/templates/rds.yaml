---
apiVersion: rds.aws.upbound.io/v1beta1
kind: SubnetGroup
metadata:
  annotations:
    meta.upbound.io/example-id: rds/v1beta1/subnetgroup
  labels:
    testing.upbound.io/example-name: default
  name: example-subnetgroup
spec:
  forProvider:
    region: {{ .Values.aws_region }} 
    subnetIdRefs:
      - name: {{ .Values.environment }}-private-{{ .Values.aws_region }}a
      - name: {{ .Values.environment }}-private-{{ .Values.aws_region }}b
    tags:
      Name: My DB subnet group
---
apiVersion: rds.aws.upbound.io/v1beta1
kind: Instance
metadata:
  annotations:
    meta.upbound.io/example-id: rds/v1beta1/instance
    uptest.upbound.io/timeout: "3600"
  labels:
    testing.upbound.io/example-name: example-dbinstance
  name: example-dbinstance
spec:
  forProvider:
    allocatedStorage: 20
    autoGeneratePassword: true
    autoMinorVersionUpgrade: true
    backupRetentionPeriod: 14
    backupWindow: 09:46-10:16
    engine: postgres
    engineVersion: "13.7"
    instanceClass: db.t3.large
    dbSubnetGroupNameRef:
        name: example-subnetgroup
    vpcSecurityGroupIdRefs:
        name: sample-rds-sg
    maintenanceWindow: Mon:00:00-Mon:03:00
    name: example
    passwordSecretRef:
      key: password
      name: rds-master-password
      namespace: {{ .Values.namespace }}
    publiclyAccessible: false
    region: {{ .Values.aws_region }} 
    skipFinalSnapshot: true
    storageEncrypted: true
    storageType: gp2
    username: adminuser
  writeConnectionSecretToRef:
    name: example-dbinstance-out
    namespace: default
  ---
  apiVersion: network.aws.crossplane.io/v1alpha3
  kind: SecurityGroup
  metadata:
    name: sample-rds-sg
  spec:
    vpcIdRef:
      name: {{ .Values.environment }}-main
    groupName: my-cool-rds-sg
    description: open rds access to crossplane workload
    reclaimPolicy: Delete
    ingress:
      - fromPort: 5432
        toPort: 5432
        protocol: tcp
        cidrBlocks:
          - cidrIp: 0.0.0.0/0
            description: all ips
    providerRef:
      name: aws-provider